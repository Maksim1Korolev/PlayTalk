version: "3.8"

services:
  # Client
  client:
    build: ./client
    ports:
      - "5173:5173"
    networks:
      - playtalk-network
    environment:
      - AUTH_SERVICE_API_URL=${AUTH_SERVICE_API_URL}
      - COMMUNICATION_SOCKET_URL=${COMMUNICATION_SOCKET_URL}
      - GAME_SOCKET_URL=${GAME_SOCKET_URL}
    develop:
      watch:
        - path: ./client/package.json
          action: rebuild
        - path: ./client
          target: /usr/src/app
          action: sync

  # Auth Service
  auth_service:
    build: ./server/auth/auth-service
    ports:
      - "3010:3010"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
      - KAFKA_BROKER_URL=${KAFKA_BROKER_URL}
      - KAFKAJS_NO_PARTITIONER_WARNING=${KAFKAJS_NO_PARTITIONER_WARNING}
    depends_on:
      - mongodb
      - redis
      - kafka
    develop:
      watch:
        - path: ./app/package.json
          action: rebuild
        - path: ./server/auth/auth-service
          target: /usr/src/app
          action: sync

  # Profile Service
  profile_service:
    build: ./server/profile/profile-service
    ports:
      - "3040:3040"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${PROFILE_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
      - KAFKA_BROKER_URL=${KAFKA_BROKER_URL}
      - KAFKAJS_NO_PARTITIONER_WARNING=${KAFKAJS_NO_PARTITIONER_WARNING}
    depends_on:
      - mongodb
      - redis
      - kafka
    develop:
      watch:
        - path: ./server/profile/profile-service/package.json
          action: rebuild
        - path: ./server/profile/profile-service
          target: /usr/src/app
          action: sync

  # Communication Gateway Service
  communication_gateway_service:
    build: ./server/communication/core/communication-gateway-service
    ports:
      - "3000:3000"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - AUTH_SERVICE_API_URL=${AUTH_SERVICE_API_URL}
      - CHAT_SERVICE_API_URL=${CHAT_SERVICE_API_URL}
      - JWT_SECRET=${JWT_SECRET}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
    depends_on:
      - redis
    develop:
      watch:
        - path: ./server/communication/core/communication-gateway-service/package.json
          action: rebuild
        - path: ./server/communication/core/communication-gateway-service
          target: /usr/src/app
          action: sync

  # Chat Service
  chat_service:
    build: ./server/communication/modules/chat/chat-service
    ports:
      - "3020:3020"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${CHAT_DATABASE_URL}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
    depends_on:
      - mongodb
      - redis
    develop:
      watch:
        - path: ./server/communication/modules/chat/chat-service/package.json
          action: rebuild
        - path: ./server/communication/modules/chat/chat-service
          target: /usr/src/app
          action: sync

  # Game Gateway Service
  game_gateway_service:
    build: ./server/game/core/game-gateway-service
    ports:
      - "3030:3030"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - TIC_TAC_TOE_SERVICE_API_URL=${TIC_TAC_TOE_SERVICE_API_URL}
      - TIC_TAC_TOE_REPOSITORY_SERVICE_API_URL=${TIC_TAC_TOE_REPOSITORY_SERVICE_API_URL}
      - AUTH_SERVICE_API_URL=${AUTH_SERVICE_API_URL}
      - JWT_SECRET=${JWT_SECRET}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
    depends_on:
      - redis
    develop:
      watch:
        - path: ./server/game/core/game-gateway-service/package.json
          action: rebuild
        - path: ./server/game/core/game-gateway-service
          target: /usr/src/app
          action: sync

  # Tic Tac Toe Service
  tic_tac_toe_service:
    build:
      context: ./server/game/modules/tic-tac-toe/tic-tac-toe-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - TIC_TAC_TOE_REPOSITORY_SERVICE_API_URL=${TIC_TAC_TOE_REPOSITORY_SERVICE_API_URL}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
    depends_on:
      - redis
    develop:
      watch:
        - path: ./server/game/modules/tic-tac-toe/tic-tac-toe-service/tic-tac-toe-service.csproj
          action: rebuild
        - path: ./server/game/modules/tic-tac-toe/tic-tac-toe-service
          target: /usr/src/app
          action: sync

  # Tic Tac Toe Repository Service
  tic_tac_toe_repository_service:
    build: ./server/game/modules/tic-tac-toe/tic-tac-toe-repository-service
    ports:
      - "8082:8082"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${TIC_TAC_TOE_DATABASE_URL}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
    depends_on:
      - mongodb
      - redis
    develop:
      watch:
        - path: ./server/game/modules/tic-tac-toe/tic-tac-toe-repository-service/package.json
          action: rebuild
        - path: ./server/game/modules/tic-tac-toe/tic-tac-toe-repository-service
          target: /usr/src/app
          action: sync

  # Redis
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - playtalk-network

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - playtalk-network
    volumes:
      - ./mongo_data:/data/db

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=${ZOOKEEPER_CLIENT_PORT}
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - playtalk-network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=${KAFKA_BROKER_ID}
      - KAFKA_ZOOKEEPER_CONNECT=${KAFKA_ZOOKEEPER_CONNECT}
      - KAFKA_ADVERTISED_LISTENERS=${KAFKA_ADVERTISED_LISTENERS}
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}
    networks:
      - playtalk-network

networks:
  playtalk-network:
    driver: bridge
