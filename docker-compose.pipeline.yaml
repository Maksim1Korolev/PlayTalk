services:
  # Client
  client:
    build:
      context: ./client
      target: production
    image: naitu2/client:latest
    ports:
      - "80:80"
    networks:
      - playtalk-network
    environment:
      - NODE_ENV=production
      - AUTH_SERVICE_API_URL=${AUTH_SERVICE_API_URL}
      - COMMUNICATION_SOCKET_URL=${COMMUNICATION_SOCKET_URL}
      - GAME_SOCKET_URL=${GAME_SOCKET_URL}

  # Auth Service
  auth_service:
    build: ./server/auth/auth-service
    image: naitu2/auth_service:latest
    ports:
      - "3010:3010"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${AUTH_DATABASE_URL}
      - KAFKA_BROKER_URL=${KAFKA_BROKER_URL}
      - KAFKAJS_NO_PARTITIONER_WARNING=${KAFKAJS_NO_PARTITIONER_WARNING}
      - JWT_SECRET=${JWT_SECRET}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
      - KAFKA_MESSAGE_SECRET_KEY=${KAFKA_MESSAGE_SECRET_KEY}

  # Profile Service
  profile_service:
    build:
      context: ./server/profile/profile-service
    image: naitu2/profile_service:latest
    ports:
      - "3040:3040"
    networks:
      - playtalk-network

    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${PROFILE_DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}
      - KAFKA_BROKER_URL=${KAFKA_BROKER_URL}
      - KAFKAJS_NO_PARTITIONER_WARNING=${KAFKAJS_NO_PARTITIONER_WARNING}
      - KAFKA_MESSAGE_SECRET_KEY=${KAFKA_MESSAGE_SECRET_KEY}

  # Communication Gateway Service
  communication_gateway_service:
    build: ./server/communication/core/communication-gateway-service
    image: naitu2/communication_gateway_service:latest
    ports:
      - "3000:3000"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - AUTH_SERVICE_API_URL=${AUTH_SERVICE_API_URL}
      - CHAT_SERVICE_API_URL=${CHAT_SERVICE_API_URL}
      - JWT_SECRET=${JWT_SECRET}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}

  # Chat Service
  chat_service:
    build: ./server/communication/modules/chat/chat-service
    image: naitu2/chat_service:latest
    ports:
      - "3020:3020"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${CHAT_DATABASE_URL}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}

  # Game Gateway Service
  game_gateway_service:
    build: ./server/game/core/game-gateway-service
    image: naitu2/game_gateway_service:latest
    ports:
      - "3030:3030"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - TIC_TAC_TOE_SERVICE_API_URL=${TIC_TAC_TOE_SERVICE_API_URL}
      - TIC_TAC_TOE_REPOSITORY_SERVICE_API_URL=${TIC_TAC_TOE_REPOSITORY_SERVICE_API_URL}
      - AUTH_SERVICE_API_URL=${AUTH_SERVICE_API_URL}
      - JWT_SECRET=${JWT_SECRET}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}

  # Tic Tac Toe Service
  tic_tac_toe_service:
    build:
      context: ./server/game/modules/tic-tac-toe/tic-tac-toe-service
      dockerfile: Dockerfile
      target: production
    image: naitu2/tic_tac_toe_service:latest
    ports:
      - "8080:8080"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - TIC_TAC_TOE_REPOSITORY_SERVICE_API_URL=${TIC_TAC_TOE_REPOSITORY_SERVICE_API_URL}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}

  # Tic Tac Toe Repository Service
  tic_tac_toe_repository_service:
    build: ./server/game/modules/tic-tac-toe/tic-tac-toe-repository-service
    image: naitu2/tic_tac_toe_repository_service:latest
    ports:
      - "8082:8082"
    networks:
      - playtalk-network
    environment:
      - REDIS_URL=${REDIS_URL}
      - DATABASE_URL=${TIC_TAC_TOE_DATABASE_URL}
      - INTERNAL_SERVICE_HEADER=${INTERNAL_SERVICE_HEADER}

networks:
  playtalk-network:
    driver: bridge
